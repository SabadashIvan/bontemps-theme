{% comment %}
This module will build a bundle of three items, displayed in a row. the submit button will make an ajax call to add the three items to the cart.

This module is dependant on the cart.js package being installed on the theme -
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/shopify-cartjs/0.4.1/cart.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/shopify-cartjs/0.4.1/rivets-cart.min.js"></script>

 and instantiated using this script:
 <script type="text/javascript">
    jQuery(function() {
        CartJS.init({{ cart | json }});
    });
</script>
{% endcomment %}


{% capture logic_script %}
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/async@2.6.1/dist/async.min.js"></script>
<script type="text/javascript">
$(document).on('cart.requestStarted', function(event, cart) {
    console.log("started");
    });
    $(document).on('cart.ready', function(event, cart) {
    console.log("Cart Ready");
    });
$(document).on('cart.requestComplete', function(event, cart) {
    });
</script>
<script>
    var product_text_1 = $('#selected_product_1');
    var product_text_2 = $('#selected_product_2');
    var product_text_3 = $('#selected_product_3');
    console.log(product_text_1)
</script>
<script>
    var product_id_1;
    var product_id_2;
    var product_id_3;
    var id_array = [];
    function addProduct(id, title){
        console.log(id, title);
        var title = title;
        if ($('#selected_product_1').text() == '' ){
            $('#selected_product_1').text(title);
            product_id_1 = id;
        } else if ($('#selected_product_2').text() == ''){
            $('#selected_product_2').text(title);
            product_id_2 = id;
        } else {
            $('#selected_product_3').text(title);
            product_id_3 = id;
        }
        if (this.hash !== "") {

      // Store hash
      var target = $('#bundles_anchor');

      // Using jQuery's animate() method to add smooth page scroll
      // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
      $('html, body').animate({
        scrollTop: $(target).offset().top
      }, 800, function(){
   
        // Add hash (#) to URL when done scrolling (default click behavior)
        window.location.hash = hash;
      });
    } // End if
    };
    function removeProduct(loc){
        if (loc == '1'){
            $('#selected_product_1').text('');
            product_id_1 = null;
        } else if (loc == '2'){
            $('#selected_product_2').text('');
            product_id_2 = null;
        } else if (loc == '3'){
            $('#selected_product_3').text('');
            product_id_3 = null;
        }
    };
    function bundle() {
        id_array = [];
        if (product_id_1 != undefined && product_id_1 != null){
            id_array.push(product_id_1);
        }
        if (product_id_2 != undefined && product_id_2 != null){
            id_array.push(product_id_2);
        }
        if (product_id_3 != undefined && product_id_3 != null){
            id_array.push(product_id_3);
        }
        console.log(id_array);
        if(id_array.length == 3 ){
            async.each(id_array, function(id, next){
                CartJS.addItem(id, 1, {"Part of a Bundle": ""},{
                    "complete": function() {
                        console.log('complete!');
                    },
                    "success": function(data, textStatus, jqXHR){
                        next();
                    },
                    "error": function(jqhXHR, textStatus, errorThrown){
                        next(errorThrown);
                    },
                    async: true
                })
            },
            function(error){
                if (!error){
                    console.log("No Errors");
                    // window.location = "/discount/THREESOME?redirect=/cart";
                    window.location = "/cart";
                }
            })
        } else {
            alert("Please add more items to your bundle");
        }
    };

</script>

{% endcapture %}

{{ logic_script }}
{% layout 'theme' %}
{% section 'header-bundles' %}
<div class="contained">
{% section 'bundle-intro' %}
<div id="bundle_anchor" class="row">
    <div class="col-4 d-flex flex-column align-items-center justify-content-between">
    <h3 id="selected_product_1"></h3>
    <h4>Tea One</h4>
    <button class="btn btn-small btn--secondary" type="button" id="remove_1" onClick="removeProduct('1')">Remove</button>
    </div>
    <div class="col-4 d-flex flex-column align-items-center justify-content-between">
    <h3 id="selected_product_2"></h3>
    <h4>Tea Two</h4>
    <button class="btn btn-small btn--secondary" type="button" id="remove_2" onClick="removeProduct('2')">Remove</button>
    </div>
    <div class="col-4 d-flex flex-column align-items-center justify-content-between">
    <h3 id="selected_product_3"></h3>
    <h4>Tea Three</h4>
    <button class="btn btn-small btn--secondary" type="button" id="remove_3" onClick="removeProduct('3')">Remove</button>
  </div>
</div>
<div class="col-12 text-center bundle-complete-btn">
<button style="margin: .5em 0;" class="btn btn-large" type="button" onClick="bundle()">Add Bundle to Cart</button>
</div>
<ul class="grid grid--uniform  grid--view-items">
{%- assign max_height = 345 -%}
{%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
    {% for product in collections.singles.products %}
        <li class="grid__item grid__item--{{forloop.index}} {{ grid_item_width }}">
        {% include 'product-card-grid-bundles', max_height: max_height %}
        <div style="width: 100%; text-align: center;">
            <button  style="margin: 0 auto 1em; max-width: 180px;" type="button" class="btn" onClick="addProduct('{{ product.selected_or_first_available_variant.id }}', '{{product.title | escape }}');" id="bundle_adder_{{ product.id }}">Add to Bundle</button>
        </div>
        </li>
    {% endfor %}
    </ul>


</div>
