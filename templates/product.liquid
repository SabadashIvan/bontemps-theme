{% comment %}
  The contents of the product.liquid template can be found in /sections/product-template.liquid
{% endcomment %}
{% layout 'theme' %}
{% section 'header-products' %}
{% section 'product-template' %}
{% if product.tags contains 'threesome' %}
<p>This is a threesome.</p>
{% endif %}
{% section 'product-icons' %}
{% section 'instagram-feed' %}
{% if collection %}
{% if collection.previous_product or collection.next_product %}
  <p>
    {% if collection.previous_product %}
      {% capture prev_url %}{{ collection.previous_product}}#content{% endcapture %}
      {{ 'products.general.previous_product_html' | t | link_to: prev_url }}
    {% else %}
      {{ 'products.general.previous_product_html' | t }}
    {% endif %}
    |
    {% if collection.next_product %}
      {% capture next_url %}{{ collection.next_product}}#content{% endcapture %}
      {{ 'products.general.next_product_html' | t | link_to: next_url }}
    {% else %}
      {{ 'products.general.next_product_html' | t }}
    {% endif %}
  </p>
{% endif %}
{% endif %}
{% section 'visual-call-out' %}
{% section 'product-ratings' %}
{% section 'product-testimonials' %}
<script>
  // Override default values of shop.strings for each template.
  // Alternate product templates can change values of
  // add to cart button, sold out, and unavailable states here.
  theme.productStrings = {
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }}
  }
</script>

{% assign current_variant = product.selected_or_first_available_variant %}

<script type="application/ld+json">
{
  "@context": "http://schema.org/",
  "@type": "Product",
  "name": "{{ product.title | escape }}",
  "url": "{{ shop.url }}{{ product.url }}",
  {%- if product.featured_image -%}
    {%- assign image_size = product.featured_image.width | append: 'x' -%}
    "image": [
      "https:{{ product.featured_image.src | img_url: image_size }}"
    ],
  {%- endif -%}
  "description": "{{ product.description | strip_html | escape }}",
  {%- if current_variant.sku != blank -%}
    "sku": "{{ current_variant.sku }}",
  {%- endif -%}
  "brand": {
    "@type": "Thing",
    "name": "{{ product.vendor | escape }}"
  },
  "offers": [
    {%- for variant in product.variants -%}
      {
        "@type" : "Offer",
        {%- if variant.sku != blank -%}
          "sku": "{{ variant.sku }}",
        {%- endif -%}
        "availability" : "http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}",
        "price" : "{{ variant.price | divided_by: 100.00 }}",
        "priceCurrency" : "{{ shop.currency }}",
        "url" : "{{ shop.url }}{{ variant.url }}"
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  ]
}
</script>

<!-- begin klaviyo scripts -->
<script text="text/javascript">
 var _learnq = _learnq || [];
 var item = {
   Name: {{ product.title|json }},
   ProductID: {{ product.id|json }},
   Categories: {{ product.collections|map:'title'|json }},
   ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
   URL: "{{ shop.secure_url }}{{ product.url }}",
   Brand: {{ product.vendor|json }},
   Price: {{ product.price|money|json }},
   CompareAtPrice: {{ product.compare_at_price_max|money|json }}
 };

 _learnq.push(['track', 'Viewed Product', item]);

 _learnq.push(['trackViewedItem', {
   Title: item.Name,
   ItemId: item.ProductID,
   Categories: item.Categories,
   ImageUrl: item.ImageURL,
   Url: item.URL,
   Metadata: {
     Brand: item.Brand,
     Price: item.Price,
     CompareAtPrice: item.CompareAtPrice
   }
 }]);
</script>
